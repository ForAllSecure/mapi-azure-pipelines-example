# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- test*

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- checkout: self
  # Fetch a deep enough history to compute the merge base of branches with the
  # default branch.  Alternatively, set to "0" to fetch the entire history.
  fetchDepth: "50"
  persistCredentials: "true"

# Create environment to run API
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- bash: |
    git merge-base HEAD origin/main
    git log --pretty=format:"%ae" HEAD^!

# Run API in test mode. We configured test mode to output stacktraces in
# the error responses to improve the output of Mayhem for API.
- script: |
    uvicorn src.main:app &
  env:
      FASTAPI_ENV: test
  displayName: Run API

# Run Mayhem for API
- script: |

    curl -Lo mapi https://mayhem4api.forallsecure.com/downloads/cli/latest/linux-musl/mapi \
      && chmod +x mapi

    ./mapi run azure-pipelines-example auto http://localhost:8000/openapi.json \
      --url 'http://localhost:8000' \
      --junit TEST-mapi.xml \
      --html mapi.html
  env:
      MAPI_TOKEN: $(MAPI_TOKEN)
  continueOnError: "true"
  displayName: Run Mayhem for API to check for vulnerabilities

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    path: 'mapi.html'
    artifact: mapi-html-report
  continueOnError: "true"

- task: PublishTestResults@2
